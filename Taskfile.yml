# https://taskfile.dev

version: "3"

tasks:
  o:
    - go build . && ./aicode -p configs/gpt.yml {{.CLI_ARGS}}
  u:
    - go build . && BASE_URL=http://localhost:8084 ./aicode -p configs/gpt.yml {{.CLI_ARGS}}
  h:
    - go build . && ANTHROPIC_MODEL=claude-3-5-haiku-latest ANTHROPIC_API_KEY=$(pass show i/aicode-claude-api-key| head -n 1) ./aicode {{.CLI_ARGS}}
  b:
    - go build . && ANTHROPIC_MODEL=claude-3-7-sonnet-latest ANTHROPIC_API_KEY=$(pass show i/aicode-claude-api-key| head -n 1) ./aicode {{.CLI_ARGS}}
  a:
    - go build . && BASE_URL=http://localhost:8084 ANTHROPIC_MODEL=claude-3-7-sonnet-latest ANTHROPIC_API_KEY=$(pass show i/aicode-claude-api-key| head -n 1) ./aicode {{.CLI_ARGS}}

  default:
    - go build . && OPENAI_API_KEY=$(pass show i/openai.com-api-key| head -n 1) ./aicode

  t:
    - go build . && OPENAI_API_KEY=$(pass show i/openai.com-api-key| head -n 1) ./aicode -q "grep ai"

  r:
    - go build . && OPENAI_API_KEY=$(pass show i/openai.com-api-key| head -n 1) ./aicode {{.CLI_ARGS}}

  build:
    - go build .

  proxy-openai:
    - mitmproxy --mode reverse:https://api.openai.com --listen-host 127.0.0.1 --listen-port 8084

  lint:
    - docker run --rm -v "$(pwd):/app" -w /app golangci/golangci-lint:v1.64.7 golangci-lint run

  fmt:
    - go fmt .

  ch:
    deps: [fmt, lint]

  release:
    - |
      LASTTAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0")
      MAJOR=$(echo $LASTTAG | cut -d. -f1)
      MINOR=$(echo $LASTTAG | cut -d. -f2)
      NEWMINOR=$((MINOR + 1))
      NEWTAG="${MAJOR}.${NEWMINOR}"
      echo "Last tag: $LASTTAG, New tag: $NEWTAG"
      git tag $NEWTAG
      git push origin master --tags
